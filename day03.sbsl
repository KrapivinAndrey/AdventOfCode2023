структура РидерДанных
    пер ПутьКФайлу:Строка = "input.txt"
    метод ПрочитатьДанные(): Массив<Строка>
        знч ФайлДанных = новый Файл(ПутьКФайлу)
        исп Поток = ФайлДанных.ОткрытьПотокЧтения()
        возврат Поток.ПрочитатьКакСтроку().ПолучитьСтроки()
    ;
;

метод Скрипт()

    знч Данные = новый РидерДанных().ПрочитатьДанные()

    пер КонтрольнаяСумма = ПосчитатьКонтрольнуюСумму(Данные)
    Консоль.Записать(КонтрольнаяСумма)

;

метод ПосчитатьКонтрольнуюСумму(ВхДанные:Массив<Строка>):Число
    знч Шаблон = новый Образец("\\ц+")
    пер Результат = 0
    для Сч = 0 по ВхДанные.Размер()-1
        пер Найденные = новый Массив<Строка>()
        знч СтрокаДанных = ВхДанные[Сч]
        для НайденноеЧисло из Шаблон.НайтиСовпадения(СтрокаДанных)

            если ЕстьСимволРядом(ВхДанные
                                    , НайденноеЧисло.Индекс()
                                    , НайденноеЧисло.Индекс() + НайденноеЧисло.Длина()
                                    , Сч)
                Результат+=новый Число(НайденноеЧисло.Значение())
                Найденные.Добавить(НайденноеЧисло.Значение())
            ;
        ;

        Консоль.Записать(Найденные.Соединить(" "))
    ;

    возврат Результат
;

метод ЕстьСимволРядом(Карта:Массив<Строка>, Начало:Число, Конец:Число, Высота:Число):Булево
    для Чек_Высота=Высота-1 по Высота+1
        для Чек_Ширина = Начало-1 по Конец+1
            попытка 
                пер Символ =  Карта[Чек_Высота][Чек_Ширина]
                если не (Символ.ТолькоЦифры() или Символ == ".")
                    возврат Истина
                ;
            поймать Искл: ИсключениеИндексВнеГраниц
                продолжить
            ;
        ;
    ;

    возврат Ложь
;
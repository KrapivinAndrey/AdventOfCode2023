структура РидерДанных
    пер ПутьКФайлу:Строка = "input.txt"
    метод ПрочитатьДанные(): Массив<Строка>
        знч ФайлДанных = новый Файл(ПутьКФайлу)
        исп Поток = ФайлДанных.ОткрытьПотокЧтения()
        возврат Поток.ПрочитатьКакСтроку().ПолучитьСтроки()
    ;
;

структура КартаВодопроводов
    пер Карта: Массив<Массив<Строка>>
    пер СтартХ: Число
    пер СтартУ: Число
    пер Высота: Число
    пер Ширина: Число

    метод Заполнить(ВхДанные:Массив<Строка>)

        для у = 0 по ВхДанные.Размер() - 1
            пер Врем = ВхДанные.Получить(у).Разделить("")
            этот.Карта.Добавить(Врем)
            если Врем.Найти("S") != Неопределено
                этот.СтартУ = у
                этот.СтартХ = Врем.Найти("S")
            ;
        ;

        этот.Высота = ВхДанные.Размер()
        этот.Ширина = ВхДанные[0].Длина()
    ;

    метод ЕстьПереход(х1:Число, у1:Число, х2:Число, у2:Число):Булево

        если х1 < 0 или х1 >= этот.Ширина
                или
                х2 < 0 или х2 >= этот.Ширина
                или
                у1 < 0 или у1 >= этот.Высота
                или
                у2 < 0 или у2 >= этот.Высота
            возврат Ложь
        ;

        знч Труба1 = СоединениеТруб(Карта[у1][х1])
        знч Труба2 = СоединениеТруб(Карта[у2][х2])
        пер Результат = Ложь
        выбор
            когда х1 < х2
                Результат = Труба1[1] и Труба2[3]
            когда х1 > х2
                Результат = Труба1[3] и Труба2[1]
            когда у1 < у2
                Результат = Труба1[2] и Труба2[0]
            когда у1 > у2
                Результат = Труба1[0] и Труба2[2]
            иначе
                выбросить новый ИсключениеНедопустимоеСостояние()
            ;

        возврат Результат

    ;
    
    метод СоединениеТруб(СимволТрубы:Строка):Массив<Булево>
        пер Результат = [Ложь, Ложь, Ложь, Ложь]
        выбор СимволТрубы
        когда "|"
            Результат = [Истина, Ложь, Истина, Ложь]
        когда "-"
            Результат = [Ложь, Истина, Ложь, Истина]
        когда "L"
            Результат = [Истина, Истина, Ложь, Ложь]
        когда "J"
            Результат = [Истина, Ложь, Ложь, Истина]
        когда "7"
            Результат = [Ложь, Ложь, Истина, Истина]
        когда "F"
            Результат = [Ложь, Истина, Истина, Ложь]
        когда "S"
            Результат = [Истина, Истина, Истина, Истина]
        ;

        возврат Результат
    ;

    метод НомерВершины(х:Число, у:Число):Число
        возврат у * Карта[0].Размер() + х
    ;

    метод ВершинаПоНомеру(Номер: Число):Массив<Число>
        пер у = (Номер / Карта[0].Размер()).ЦелаяЧасть()
        пер х = Номер - у * Карта[0].Размер()

        возврат [х, у]
    ;
;

метод ПоискВГлубину(Карта:КартаВодопроводов)

    пер Посешенные = новый Массив<Число>()
    пер Предки = новый Соответствие<Число, Число>()
    Предки.Вставить(Карта.НомерВершины(Карта.СтартХ, Карта.СтартУ), -1)
    пер Стек = новый Массив<Число>()

    пер Вершина_х = Карта.СтартХ
    пер Вершина_у = Карта.СтартУ

    пер ВершинаНомер = Карта.НомерВершины(Вершина_х, Вершина_у)
    Стек.Добавить(ВершинаНомер)

    знч Обходы = [[1,0], [0,1],[-1,0],[0,-1]]
    пер НайденЦикл = Ложь

    пока не НайденЦикл

        ВершинаНомер = Стек.Получить(0)
        знч Врем = Карта.ВершинаПоНомеру(ВершинаНомер)
        Вершина_х = Врем[0]
        Вершина_у = Врем[1]
        Стек.УдалитьПоИндексу(0)
        Посешенные.Добавить(ВершинаНомер)
    
        для Ход из Обходы
            знч Новая_х = Вершина_х + Ход[0]
            знч Новая_у = Вершина_у + Ход[1]
            если не Карта.ЕстьПереход(Вершина_х, Вершина_у, Новая_х, Новая_у)
                продолжить
            ;
            знч НоваяНомер = Карта.НомерВершины(Новая_х, Новая_у)
            если не Посешенные.Содержит(НоваяНомер)
                Предки[НоваяНомер] = ВершинаНомер
                Стек.Удалить(НоваяНомер)
                Стек.Вставить(0, НоваяНомер)
            иначе если Посешенные.Содержит(НоваяНомер) и Предки.Получить(ВершинаНомер) != НоваяНомер
                Консоль.Записать("Найден цикл")
                НайденЦикл = Истина
                прервать
            ;
        ;
    ;
    пер ДлинаПути = 0
    пер ПоследняяВершина = Посешенные.Последний()
    пока ПоследняяВершина != Карта.НомерВершины(Карта.СтартХ, Карта.СтартУ)
        ДлинаПути+=1
        ПоследняяВершина = Предки.Получить(ПоследняяВершина)
    ;

    Консоль.Записать(ДлинаПути)
;

метод Скрипт()

    знч Данные = новый РидерДанных().ПрочитатьДанные()

    знч ВхКарта = новый КартаВодопроводов()
    ВхКарта.Заполнить(Данные)
    ПоискВГлубину(ВхКарта)

;
структура РидерДанных
    пер ПутьКФайлу:Строка = "input.txt"
    метод ПрочитатьДанные(): Массив<Строка>
        знч ФайлДанных = новый Файл(ПутьКФайлу)
        исп Поток = ФайлДанных.ОткрытьПотокЧтения()
        возврат Поток.ПрочитатьКакСтроку().ПолучитьСтроки()
    ;
;

структура Движения
    пер L = ""
    пер R = ""

;
метод Скрипт()
    знч Данные = новый РидерДанных().ПрочитатьДанные()
    
    знч Первый = ПростойОбход(Данные)
    знч Второй = ОбходПризрака(Данные)

    Консоль.Записать(Первый)
    Консоль.Записать(Второй)

;

метод ПростойОбход(ВхДанные:Массив<Строка>):Число

    пер Ходы = ВхДанные[0]
    знч Образец = '^(\w+) = \((\w+), (\w+)\)'
    пер Карта = новый Соответствие<Строка, Движения>()


    для сч = 2 по ВхДанные.Размер() - 1
        знч СтрокаДанных = ВхДанные.Получить(сч)
        пер Разбор = Образец.НайтиСовпадения(СтрокаДанных)
        пер Врем = новый Движения(Разбор[0].Группа(2), Разбор[0].Группа(3))
        Карта.Вставить(Разбор[0].Группа(1), Врем)
    ;
    
    пер СчХодов = 0
    пер ТекПоз = "AAA"
    пер ТекИнструкция = 0

    пока ТекПоз != "ZZZ"

        если ТекИнструкция == Ходы.Длина()
            ТекИнструкция = 0
        ;

        ТекПоз = Карта.Получить(ТекПоз)[Ходы[ТекИнструкция]]
        СчХодов+=1
        ТекИнструкция+=1

    ;

    возврат СчХодов

;

метод ОбходПризрака(ВхДанные:Массив<Строка>): Число

    пер Ходы = ВхДанные[0]
    знч Образец = '^(\w+) = \((\w+), (\w+)\)'
    пер Карта = новый Соответствие<Строка, Движения>()
    
    пер ТекПозиция = новый Массив<Строка>()
    пер СчХодов = новый Массив<Число>()

    для сч = 2 по ВхДанные.Размер() - 1
        знч СтрокаДанных = ВхДанные.Получить(сч)
        пер Разбор = Образец.НайтиСовпадения(СтрокаДанных)
        пер Врем = новый Движения(Разбор[0].Группа(2), Разбор[0].Группа(3))
        Карта.Вставить(Разбор[0].Группа(1), Врем)

        если Разбор[0].Группа(1).ЗаканчиваетсяНа("A")

            ТекПозиция.Добавить(Разбор[0].Группа(1))
            СчХодов.Добавить(0)
        ;
    ;
    
    пер ТекИнструкция = 0
    пер ВездеZ = Ложь
    пока не ВездеZ

        если ТекИнструкция == Ходы.Длина()
            ТекИнструкция = 0
        ;

        ВездеZ = Истина
        для сч = 0 по ТекПозиция.Размер() -1

            если не ТекПозиция[сч].ЗаканчиваетсяНа("Z")
                СчХодов[сч] +=1
                ТекПозиция[сч] = Карта.Получить(ТекПозиция[сч])[Ходы[ТекИнструкция]]
                ВездеZ = Ложь
            ;
        ;

        ТекИнструкция+=1

    ;

    пер Результат = СчХодов.Получить(0)
    для сч = 1 по ТекПозиция.Размер() - 1
        Результат = НОК(Результат, СчХодов[сч])
    ;

    возврат Результат

;

метод НОД(а:Число, б:Число):Число

    пер Первый = 0
    пер Второй = 0

    если а < б
        Первый = б
        Второй = а
    иначе
        Первый = а
        Второй = б
    ;

    пока Второй !=0
        знч Врем = Первый % Второй
        Первый = Второй
        Второй = Врем
    ;

    возврат Первый
;

метод НОК(а:Число, б:Число):Число
    возврат а * б * НОД(а, б)
;
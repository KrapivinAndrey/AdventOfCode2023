структура РидерДанных
    пер ПутьКФайлу:Строка = "input.txt"
    метод ПрочитатьДанные(): Массив<Строка>
        знч ФайлДанных = новый Файл(ПутьКФайлу)
        исп Поток = ФайлДанных.ОткрытьПотокЧтения()
        возврат Поток.ПрочитатьКакСтроку().ПолучитьСтроки()
    ;
;

конст ПорядокКарт = ["2", "3", "4", "5", "6", "7", "8", "9", "T", "J", "Q", "K", "A"]
конст ПорядокРаскладов = ["HighCard", "OnePair", "TwoPair", "Three", "FullHouse", "Four", "Five"]

структура РукаКарты
    пер Карты:Массив<Строка>
    пер Расклад: Строка
    
    метод РазобратьСтроку(ВхСтрока:Строка)
        Карты = ВхСтрока.Разделить("")
        пер ВремКарты = ВхСтрока.Разделить("")
        ВремКарты.Сортировать((Карта1, Карта2) -> ПорядокКарт.Найти(Карта2) - ПорядокКарт.Найти(Карта1))
        знч Врем = новый Множество<Строка>(ВремКарты)
        выбор 
        когда Врем.Размер() == 1
            Расклад = "Five"
        когда Врем.Размер() == 2
            если (ВремКарты[0] == ВремКарты[1] и ВремКарты[1] == ВремКарты[2] и ВремКарты[2] == ВремКарты[3]) 
                или (ВремКарты[1] == ВремКарты[2] и ВремКарты[2] == ВремКарты[3] и ВремКарты[3] == ВремКарты[4]) 
                Расклад = "Four"
            иначе
                Расклад = "FullHouse"
            ;
        когда Врем.Размер() == 3
            если (ВремКарты[0] == ВремКарты[1] и ВремКарты[1] == ВремКарты[2])
                    или (ВремКарты[1] == ВремКарты[2] и ВремКарты[2] == ВремКарты[3])
                    или (ВремКарты[2] == ВремКарты[3] и ВремКарты[3] == ВремКарты[4])
                Расклад = "Three"
            иначе
                Расклад = "TwoPair"
            ;
        когда Врем.Размер() == 4
            Расклад = "OnePair"
        иначе
            Расклад = "HighCard"
            
        ;
    ;
;

метод СравнитьРуки(Рука1: РукаКарты, Рука2:РукаКарты):Число
    пер Первая = ПорядокРаскладов.Найти(Рука1.Расклад)
    для карта из Рука1.Карты
        Первая = Первая * 100 + ПорядокКарт.Найти(карта)
    ;

    пер Вторая = ПорядокРаскладов.Найти(Рука2.Расклад)
    для карта из Рука2.Карты
        Вторая = Вторая * 100 + ПорядокКарт.Найти(карта)
    ;

    возврат Первая - Вторая
;

метод Скрипт()
    знч Данные = новый РидерДанных().ПрочитатьДанные()

    пер МассивРук = новый Массив<РукаКарты>()
    пер Ставки = новый Соответствие<РукаКарты, Число>()

    для ВхДанные из Данные

        пер НоваяРука = новый РукаКарты()
        НоваяРука.РазобратьСтроку(ВхДанные.Разделить(" ")[0])
        МассивРук.Добавить(НоваяРука)

        если Ставки.СодержитКлюч(НоваяРука)
            выбросить новый ИсключениеИндексВнеГраниц()
        ;
        Ставки.Вставить(НоваяРука, новый Число(ВхДанные.Разделить(" ")[1]))
    ;

    МассивРук.Сортировать(&СравнитьРуки)

    пер Результат = 0
    для сч=1 по МассивРук.Размер()
        Результат+=сч * Ставки.Получить(МассивРук[сч-1])
    ;

    Консоль.Записать(Результат)
;
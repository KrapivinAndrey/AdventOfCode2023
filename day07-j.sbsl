структура РидерДанных
    пер ПутьКФайлу:Строка = "input.txt"
    метод ПрочитатьДанные(): Массив<Строка>
        знч ФайлДанных = новый Файл(ПутьКФайлу)
        исп Поток = ФайлДанных.ОткрытьПотокЧтения()
        возврат Поток.ПрочитатьКакСтроку().ПолучитьСтроки()
    ;
;

конст ПорядокКарт = ["J", "2", "3", "4", "5", "6", "7", "8", "9", "T", "Q", "K", "A"]
конст ПорядокРаскладов = ["HighCard", "OnePair", "TwoPair", "Three", "FullHouse", "Four", "Five"]



структура РукаКарты
    пер Карты:Массив<Строка>
    пер Расклад: Строка

    метод ОпределитьРасклад(ВхСтрока:Строка):Строка

        пер ТекСимвол = ""
        пер Количество = 0
        пер Сохр:Массив<Число> = []

        знч Карты = ВхСтрока.Заменить("J", "").Разделить("")
        Карты.Сортировать()

        для сим из Карты

            если ТекСимвол == ""
                ТекСимвол = сим
                Количество = 1
                продолжить
            ;

            если сим == ТекСимвол
                Количество+=1
            иначе
                Сохр.Добавить(Количество)
                ТекСимвол = сим
                Количество=1
            ;
        ;

        Сохр.Добавить(Количество)
        Сохр.Сортировать(Порядок.ПоУбыванию)

        Сохр.Добавить(0)
        Сохр.Добавить(0)
        Сохр.Добавить(0)
        Сохр.Добавить(0)

        пер Результат = ""
        выбор 
        когда Сохр[0] == 5
            Результат = "Five"
        когда Сохр[0] == 4
            Результат = "Four"
        когда Сохр[0] == 3
                и Сохр[1] == 2
            Результат = "FullHouse"
        когда Сохр[0] == 3
                и Сохр[1] != 2
            Результат = "Three"
        когда Сохр[0] == 2
                и Сохр[1] == 2
            Результат = "TwoPair"
        когда Сохр[0] == 2
                и Сохр[1] != 2
            Результат = "OnePair"
        иначе
            Результат = "HighCard"
        ;

        возврат Результат
        
    ;
    
    метод РазобратьСтроку(ВхСтрока:Строка)
        Карты = ВхСтрока.Разделить("")
        Расклад = ОпределитьРасклад(ВхСтрока)
        знч КолДжокеров = ВхСтрока.ЧислоВхождений("J")
        для сч=1 по КолДжокеров
            выбор Расклад
            когда "HighCard"
                Расклад = "OnePair"
            когда "OnePair"
                Расклад = "Three"
            когда "TwoPair"
                Расклад = "FullHouse"
            когда "FullHouse"
                Расклад = "Four"
            когда "Four"
                Расклад = "Five"
            когда "Three"
                Расклад = "Four"
            ;
        ;
    ;
;

метод СравнитьРуки(Рука1: РукаКарты, Рука2:РукаКарты):Число
    пер Первая = ПорядокРаскладов.Найти(Рука1.Расклад)
    для карта из Рука1.Карты
        Первая = Первая * 100 + ПорядокКарт.Найти(карта)
    ;

    пер Вторая = ПорядокРаскладов.Найти(Рука2.Расклад)
    для карта из Рука2.Карты
        Вторая = Вторая * 100 + ПорядокКарт.Найти(карта)
    ;

    возврат Первая - Вторая
;

метод Скрипт()
    знч Данные = новый РидерДанных().ПрочитатьДанные()

    пер МассивРук = новый Массив<РукаКарты>()
    пер Ставки = новый Соответствие<РукаКарты, Число>()

    для ВхДанные из Данные

        пер НоваяРука = новый РукаКарты()
        НоваяРука.РазобратьСтроку(ВхДанные.Разделить(" ")[0])
        МассивРук.Добавить(НоваяРука)

        если Ставки.СодержитКлюч(НоваяРука)
            выбросить новый ИсключениеИндексВнеГраниц("жопа")
        ;
        Ставки.Вставить(НоваяРука, новый Число(ВхДанные.Разделить(" ")[1]))
    ;

    МассивРук.Сортировать(&СравнитьРуки)

    пер Результат = 0
    для сч=1 по МассивРук.Размер()
        Результат+=сч * Ставки.Получить(МассивРук[сч-1])
    ;

    Консоль.Записать(Результат)
;